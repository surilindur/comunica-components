name: CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_NODE_VERSION: 23.x

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: yarn install --immutable --mode skip-build
      - name: Run ESLint
        run: yarn run lint

  test:
    name: Test
    needs: lint
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        node-version:
          - 22.x
          - 23.x
    runs-on: ${{ matrix.os }}
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Enable Corepack
        run: corepack enable
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build project
        run: yarn run build
      - name: Execute unit tests
        run: yarn run test --selectProjects packages
      - name: Submit coverage results
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: ${{ matrix.os }}-${{ matrix.node-version }}
          parallel: true
          fail-on-error: true

  coveralls:
    name: Coverage check
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Consolidate test coverage from different jobs
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
          fail-on-error: true

  docker:
    name: Docker
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: comunica/query-sparql-prototype:dev

  documentation:
    name: Documentation
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js ${{ env.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
      - name: Enable Corepack
        run: corepack enable
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build documentation
        run: yarn run doc
      - name: Prepare artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: documentation
          name: documentation
